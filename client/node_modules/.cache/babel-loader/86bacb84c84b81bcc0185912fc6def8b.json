{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\stave-food-shop\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from \"react\";\nimport { authReducer } from '../reducers/authReducer';\nimport { apiUrl, LOCAL_STORAGE_TOKEN_NAME } from \"./constants\";\nimport axios from 'axios';\nimport { Link, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\nconst AuthContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [authState, dispatch] = useReducer(authReducer, {\n    authLoading: true,\n    isAuthenticated: false,\n    user: null\n  }); //Router\n\n  const history = useHistory; //Login\n\n  const loginUser = async userForm => {\n    try {\n      const response = await axios.post(`${apiUrl}/auth/login`, userForm);\n      if (response.data.success) localStorage.setItem(LOCAL_STORAGE_TOKEN_NAME, response.data.accessToken);\n      return response.data;\n    } catch (error) {\n      if (error.response.data) return error.response.data;else return {\n        success: false,\n        message: error.message\n      };\n    }\n  };\n\n  const authContextData = {\n    loginUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthContextProvider, \"CEZ7xM4ge31JfBwOHYyhxiNgRFc=\");\n\n_c = AuthContextProvider;\nexport default AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["D:/Project/stave-food-shop/client/src/contexts/AuthContext.js"],"names":["createContext","useReducer","authReducer","apiUrl","LOCAL_STORAGE_TOKEN_NAME","axios","Link","useHistory","AuthContext","AuthContextProvider","children","authState","dispatch","authLoading","isAuthenticated","user","history","loginUser","userForm","response","post","data","success","localStorage","setItem","accessToken","error","message","authContextData"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,SAAQC,WAAR,QAA0B,yBAA1B;AACA,SAASC,MAAT,EAAiBC,wBAAjB,QAAiD,aAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAeC,UAAf,QAAgC,kBAAhC;;AACA,OAAO,MAAMC,WAAW,gBAAGR,aAAa,EAAjC;;AAEP,MAAMS,mBAAmB,GAAG,QAAe;AAAA;;AAAA,MAAd;AAACC,IAAAA;AAAD,GAAc;AACvC,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBX,UAAU,CAACC,WAAD,EAAa;AACjDW,IAAAA,WAAW,EAAE,IADoC;AAEjDC,IAAAA,eAAe,EAAE,KAFgC;AAGjDC,IAAAA,IAAI,EAAC;AAH4C,GAAb,CAAxC,CADuC,CAOvC;;AACA,QAAMC,OAAO,GAAGT,UAAhB,CARuC,CAUvC;;AACA,QAAMU,SAAS,GAAG,MAAMC,QAAN,IAAiB;AAC/B,QAAG;AACC,YAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAN,CAAY,GAAEjB,MAAO,aAArB,EAAkCe,QAAlC,CAAvB;AACA,UAAGC,QAAQ,CAACE,IAAT,CAAcC,OAAjB,EACIC,YAAY,CAACC,OAAb,CACIpB,wBADJ,EAEIe,QAAQ,CAACE,IAAT,CAAcI,WAFlB;AAIJ,aAAON,QAAQ,CAACE,IAAhB;AACH,KARD,CAQC,OAAMK,KAAN,EACD;AACI,UAAGA,KAAK,CAACP,QAAN,CAAeE,IAAlB,EAAwB,OAAOK,KAAK,CAACP,QAAN,CAAeE,IAAtB,CAAxB,KACQ,OAAO;AAACC,QAAAA,OAAO,EAAC,KAAT;AAAgBK,QAAAA,OAAO,EAACD,KAAK,CAACC;AAA9B,OAAP;AACX;AACJ,GAdD;;AAgBA,QAAMC,eAAe,GAAG;AAACX,IAAAA;AAAD,GAAxB;AAEA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEW,eAA7B;AAAA,cACKlB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAlCD;;GAAMD,mB;;KAAAA,mB;AAqCN,eAAeA,mBAAf","sourcesContent":["import { createContext, useReducer } from \"react\";\r\nimport {authReducer} from '../reducers/authReducer'\r\nimport { apiUrl, LOCAL_STORAGE_TOKEN_NAME } from \"./constants\";\r\nimport axios from 'axios'\r\nimport {Link , useHistory} from 'react-router-dom'\r\nexport const AuthContext = createContext()\r\n\r\nconst AuthContextProvider = ({children}) =>{\r\n    const [authState, dispatch] = useReducer(authReducer,{\r\n        authLoading: true,\r\n        isAuthenticated: false,\r\n        user:null\r\n    })\r\n\r\n    //Router\r\n    const history = useHistory\r\n\r\n    //Login\r\n    const loginUser = async userForm =>{\r\n        try{\r\n            const response = await axios.post(`${apiUrl}/auth/login`,userForm)\r\n            if(response.data.success)\r\n                localStorage.setItem(\r\n                    LOCAL_STORAGE_TOKEN_NAME,\r\n                    response.data.accessToken\r\n                )\r\n            return response.data\r\n        }catch(error)\r\n        {\r\n            if(error.response.data) return error.response.data\r\n            else    return {success:false, message:error.message}\r\n        }\r\n    }\r\n\r\n    const authContextData = {loginUser}\r\n\r\n    return(\r\n        <AuthContext.Provider value={authContextData}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\n\r\nexport default AuthContextProvider"]},"metadata":{},"sourceType":"module"}